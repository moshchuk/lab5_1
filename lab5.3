#include <iostream>
#include <cmath>
using namespace std;

double p(const double x);  

int factorial(int n) {
    int fact = 1;
    for (int i = 2; i <= n; i++)
        fact *= i;
    return fact;
}

int main()
{
    double qp, qk, z;
    int n;
    cout << "qp = "; cin >> qp;
    cout << "qk = "; cin >> qk;
    cout << "n = "; cin >> n;

    double dq = (qk - qp) / n;
    double q = qp;

    while (q <= qk)
    {
        z = p(2 * q + 1) + pow(p(q), 2) * (q * q - 1) + sqrt(p(1));
        cout << q << " " << z << endl;
        q += dq;
    }

    return 0;
}

double p(const double x)
{
    if (abs(x) >= 1)
        return (sin(x) + cos(x)) / pow(sin(x), 2) + exp(x);
    else
    {
        double S = 0;
        int j = 0;
        double a = 1;
        S = a;
        do
        {
            j++;
            double R = pow(-1, j) * pow(x, 2 * j) / factorial(2 * j);
            a = (1 / cos(x)) * R;  
            S += a;
        } while (j < 4);  
        return S;
    }
}
